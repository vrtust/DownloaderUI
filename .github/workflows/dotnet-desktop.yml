name: .NET Core Desktop

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    env:
      Solution_Name: DownloaderUI.sln  # Replace with your solution name

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install dependencies
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Build
      run: dotnet build ${{ env.Solution_Name }} --configuration Debug --no-restore

    - name: Publish
      run: dotnet publish ${{ env.Solution_Name }} --configuration Debug --output ./output

    - name: Create zip package
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        Start-Sleep -s 10  # Wait for 10 seconds to ensure the previous operations are completed
        New-Item -Path ./output/windows -ItemType Directory -Force
        Compress-Archive -Path ./output/* -DestinationPath ./output/windows/DownloaderUI_windows_Debug_${{ github.run_id }}.zip
      shell: powershell

    - name: Create tar.gz package
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        mkdir -p ./output/linux
        tar -czvf ./output/linux/DownloaderUI_linux_Debug_${{ github.run_id }}.tar.gz -C ./output .

    - name: Upload artifacts for Windows
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: Windows Build
        path: ./output/windows/DownloaderUI_windows_Debug_${{ github.run_id }}.zip

    - name: Upload artifacts for Linux
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: Linux Build
        path: ./output/linux/DownloaderUI_linux_Debug_${{ github.run_id }}.tar.gz
